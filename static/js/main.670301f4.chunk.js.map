{"version":3,"sources":["Lamp.js","App.js","reportWebVitals.js","index.js"],"names":["Root","styled","div","Color","span","color","Connected","connected","Lamp","props","toggleConnect","state","console","log","client","end","setState","deviceId","groupId","serverConfig","connectionString","username","password","mqtt","connect","will","topic","payload","on","subscribe","err","error","publish","retain","message","toString","receivedColor","JSON","parse","name","groups","forEach","group","endsWith","onChange","e","target","value","pushThzeButton","stringify","this","htmlFor","type","id","onClick","disabled","React","Component","App","numberOfLamps","addLamp","removeLamp","Math","max","onInputChange","lamps","i","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.670301f4.chunk.js","sourcesContent":["import React from \"react\";\nimport mqtt from \"mqtt\";\nimport styled from \"styled-components\";\n\nconst version = \"1.0.0\";\n\nconst Root = styled.div`\n  border: 1px solid black;\n  width: 500px;\n`;\n\nconst Color = styled.span`\n  display: inline-block;\n  width: 100px;\n  height: 20px;\n  ${({ color }) => `background-color: ${color};`}\n  border: 1px solid #ccc;\n`;\n\nconst Connected = styled.div`\n  ${({ connected }) => `color: ${connected ? \"green\" : \"red\"};`}\n`;\n\nclass Lamp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deviceId: this.props.deviceId,\n      color: \"#ffffff\",\n      receivedColor: \"#ffffff\",\n      connected: false,\n      groups: [],\n      name: \"unset\",\n    };\n  }\n\n  toggleConnect = () => {\n    if (this.state.connected) {\n      console.log(\"Disconnecting...\");\n      if (this.client) {\n        this.client.end();\n        this.setState({\n          connected: false,\n        });\n      }\n    } else {\n      console.log(\"Connecting...\");\n\n      const { groupId, deviceId } = this.state;\n      const { connectionString, username, password } = this.props.serverConfig;\n      const client = mqtt.connect(connectionString, {\n        username,\n        password,\n        will: {\n          topic: `/lampethere/device/${deviceId}/online`,\n          payload: \"false\",\n        },\n      });\n\n      client.on(\"connect\", () => {\n        console.log(\"Connected\");\n\n        this.setState({ connected: true });\n\n        client.subscribe(`/lampethere/device/${deviceId}/#`, (err) => {\n          if (!err) {\n            client.publish(`/lampethere/device/${deviceId}/online`, \"true\", {\n              retain: true,\n            });\n            client.publish(`/lampethere/device/${deviceId}/version`, version);\n          } else {\n            console.error(err);\n          }\n        });\n      });\n\n      client.on(\"error\", (error) => {\n        this.setState({ connected: false });\n        console.error(error);\n        client.end();\n      });\n\n      client.on(\"message\", (topic, message) => {\n        console.log(deviceId, topic, message.toString());\n        // eslint-disable-next-line default-case\n        switch (topic) {\n          case `/lampethere/device/${deviceId}/message`:\n            this.setState({\n              receivedColor: JSON.parse(message.toString()).color,\n            });\n            break;\n          case `/lampethere/device/${deviceId}/config/color/set`:\n            this.setState({\n              color: message.toString(),\n            });\n            break;\n          case `/lampethere/device/${deviceId}/config/name/set`:\n            this.setState({\n              name: message.toString(),\n            });\n            break;\n          case `/lampethere/device/${deviceId}/config/groups/set`:\n            const groups = JSON.parse(message.toString());\n            this.setState({\n              groups,\n            });\n            groups.forEach((group) => {\n              this.client.subscribe(\n                `/lampethere/group/${group}/message`,\n                (err) => {\n                  if (err) {\n                    console.log(err);\n                  }\n                }\n              );\n            });\n            break;\n        }\n\n        if (topic.endsWith(\"/message\")) {\n          this.setState({\n            receivedColor: JSON.parse(message.toString()).color,\n          });\n        }\n      });\n      this.client = client;\n    }\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  pushThzeButton = () => {\n    const { color } = this.state;\n    this.state.groups.forEach((groupId) => {\n      console.log(\"group\", groupId, color);\n      this.client.publish(\n        `/lampethere/group/${groupId}/message`,\n        JSON.stringify({ color })\n      );\n    });\n  };\n\n  render() {\n    const {\n      receivedColor,\n      deviceId,\n      color,\n      groups,\n      name,\n      connected,\n    } = this.state;\n    return (\n      <Root>\n        <Connected connected={connected}>\n          Connected:{connected.toString()}\n        </Connected>\n        <div>\n          <label htmlFor=\"deviceId\">Device ID:</label>\n          <input\n            type=\"text\"\n            value={deviceId}\n            onChange={this.onChange}\n            name=\"deviceId\"\n            id=\"deviceId\"\n          />\n        </div>\n        <div>\n          Color:\n          <Color color={color} />\n        </div>\n        <div>name: {name}</div>\n        <div>groups: {JSON.stringify(groups)}</div>\n        <div>\n          Received color:\n          <Color color={receivedColor} />\n        </div>\n        <button onClick={this.toggleConnect}>\n          {connected ? \"Disconnect\" : \"Connect\"}\n        </button>\n        <button onClick={this.pushThzeButton} disabled={!connected}>\n          Push thze button\n        </button>\n      </Root>\n    );\n  }\n}\n\nexport default Lamp;\n","import React from \"react\";\nimport Lamp from \"./Lamp\";\n\nclass App extends React.Component {\n  state = {\n    numberOfLamps: 3,\n    connectionString: \"ws://localhost:9001\",\n    username: \"lampethere\",\n    password: \"lampethere\",\n  };\n\n  addLamp = () => {\n    this.setState(({ numberOfLamps }) => ({\n      numberOfLamps: numberOfLamps + 1,\n    }));\n  };\n\n  removeLamp = () => {\n    this.setState(({ numberOfLamps }) => ({\n      numberOfLamps: Math.max(numberOfLamps - 1, 0),\n    }));\n  };\n\n  onInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    const lamps = [];\n    const serverConfig = {\n      connectionString: this.state.connectionString,\n      username: this.state.username,\n      password: this.state.password,\n    };\n    for (let i = 0; i < this.state.numberOfLamps; i++) {\n      console.log(i);\n      lamps.push(\n        <Lamp key={i} deviceId={`device${i + 1}`} serverConfig={serverConfig} />\n      );\n    }\n    console.log(\"lamps\", lamps);\n\n    return (\n      <>\n        <div>\n          connectionString:\n          <input\n            type=\"text\"\n            name=\"connectionString\"\n            onChange={this.onInputChange}\n            value={this.state.connectionString}\n          />\n        </div>\n        <div>\n          Username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            onChange={this.onInputChange}\n            value={this.state.username}\n          />\n        </div>\n        <div>\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={this.onInputChange}\n            value={this.state.password}\n          />\n        </div>\n        <button onClick={this.addLamp}>Add lamp</button>\n        <button onClick={this.removeLamp}>Remove lamp</button>\n        {lamps}\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}